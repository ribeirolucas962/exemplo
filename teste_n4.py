# -*- coding: utf-8 -*-
"""Teste N4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nn9VPlgnazG9hxIKHswyPsqgln6FBG-h

Importando as blioteca pandas

# Nova seção
"""

import pandas as pd

"""
Baixando o arquivo em csv MKT do desafio 4."""



MKT = pd.read_csv('/content/MKT (1).csv')

"""Lendo os primeiras 5 linhas das colunas para endenter as colunas."""



MKT.head()

"""Verificanco as 10 ultimas linhas das colunas"""

MKT.tail(10)

"""Renomeação de coluna"""

MKT = MKT.rename(columns={'sales':'vendas'})

"""Verificando colunas renomeada"""

MKT.head()

"""Verificação das listagem das variáveis existentes."""

MKT.dtypes

"""Verificção de dados nulos e nao nulos"""

MKT.info()

"""seleção de colunas"""

MKT[['youtube', 'facebook', 'newspaper', 'vendas']]

"""Seleção de colunas e as principais metricas das colunas descrevendo uma contagem, média, maximo, minimo, porcentagem, distanciamento."""

MKT[['youtube', 'facebook', 'newspaper', 'vendas',]].describe()

"""fa"""

agg_mkt_price = MKT.groupby(['facebook','youtube','newspaper'])['vendas'].agg('mean').reset_index()
agg_mkt_price

# Commented out IPython magic to ensure Python compatibility.
# %pip install plotly
# %pip install Cufflinks
# %pip install chart-studio

import pandas as pd
import seaborn as sns
import numpy as np

import matplotlib.pyplot as plt
import chart_studio.plotly as py
import cufflinks as af

import plotly.graph_objects as go
import plotly.express as px

"""Mostrando o describe mais detalhados em graficos"""

fig = px.box(MKT, x='facebook')
fig.update_traces(line_color='blue')

fig = px.box(MKT, x='youtube')
fig.update_traces(line_color='blue')

fig = px.box(MKT, x='newspaper')
fig.update_traces(line_color='blue')

fig = px.box(MKT, x='vendas')
fig.update_traces(line_color='blue')

MKT.columns

sns.pairplot(MKT, hue="vendas");

"""Fazendo a correlação entre as variaveis"""

MKT.corr()

"""Usando mapa de correlação para análises de dados e estatísticas para identificar padrões e tendências entre diferentes variáveis."""

sns.heatmap(MKT.corr(), annot=True);

"""Olhando atravez do histograma a frequencia das vendas."""

sns.histplot(MKT['vendas']);

"""Preparando a base de dados para Treinamento."""

MKT.columns

x = MKT [['youtube', 'facebook', 'newspaper']]

y = MKT[['vendas']]

"""Treinando e testando minha base de dados."""

from sklearn.model_selection import train_test_split
x_train, X_test, y_train, y_test = train_test_split(x, y, train_size= 0.7, random_state= 42)

print(x_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)

"""Fazendo uma modelo de regressão"""

from sklearn.linear_model import LinearRegression

ln = LinearRegression()

"""Treinando meu modelo regressão"""

ln.fit(x_train, y_train)

"""Predizendo minha base de teste"""

y_pred = ln.predict(X_test)

"""Importando a biblioteca r2_score para fazer o coeficiente para a predição."""

from sklearn.metrics import r2_score
r = r2_score (y_test, y_pred)

print('r_quadrado:', r)

"""Mostrando em grafico o resultado real da predição."""

import matplotlib.pyplot as plt

c = [i for i in range(1, 53, 1)]
 fig = plt.figure(figsize=(15,6))
 plt.plot(c, y_test, color="blue")
 plt.plot(c, y_pred, color = "red")
 plt.xlabel("index")
 plt.ylabel("vendas");